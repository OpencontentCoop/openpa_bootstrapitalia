<?php

use Opencontent\Opendata\Api\AttributeConverter\Tags;
use Opencontent\Opendata\Api\Exception\InvalidInputException;
use Opencontent\Opendata\Api\PublicationProcess;

class ImmutableTagsAttributeConverter extends Tags
{
    public function set($data, PublicationProcess $process)
    {
        return parent::set($data, $process); // TODO: Change the autogenerated stub
    }

    public static function validate($identifier, $data, eZContentClassAttribute $attribute)
    {
        parent::validate($identifier, $data, $attribute);
        if (is_array($data)) {
            foreach ($data as $item) {
                if (!is_string($item)) {
                    throw new InvalidInputException('Invalid data', $identifier, $data);
                }
            }
        }
    }

    private static function getParentTag(): ?eZTagsObject
    {
        return null;
    }

    private static function isKeywordInTagTree($keyword): ?eZTagsObject
    {
        $keywordsFound = eZTagsObject::fetchByKeyword($keyword);
        if (!empty($keywordsFound)) {
            if (self::getParentTag() instanceof eZTagsObject) {
                foreach ($keywordsFound as $keywordFound) {
                    $pathArray = explode('/', trim($keywordFound->attribute('path_string'), '/'));
                    if (in_array(self::getParentTag()->attribute('id'), $pathArray)) {
                        return $keywordFound;
                    }
                }
            }
        }

        return null;
    }
}